}
fips_pop %>%
per100(white:hispanic)
fips_pop %>%
per100(white
)
fips_pop %>%
mutate(white_prop = (white/pop)*100000)
per100 <- function(race){
mutate((race / fips_pop$pop)*100000)
}
fips_pop %>%
per100(race)
fips_pop %>%
per100(white)
fips_pop %>%
pivot_longer(cols = white:hispanic, names_to = "race",
values_to = "racepop")
fips_pop %>%
pivot_longer(cols = white:hispanic, names_to = "race",
values_to = "racepop") %>%
mutate(prop = (racepop/pop)*100000)
fips_pop %>%
pivot_longer(cols = white:hispanic, names_to = "race",
values_to = "racepop") %>%
mutate(prop = (racepop/pop)*100000) %>%
pivot_wider(names_from = race, names_glue = "{race}_{prop}",
values_from = prop)
fips_pop %>%
pivot_longer(cols = white:hispanic, names_to = "race",
values_to = "racepop") %>%
mutate(prop = (racepop/pop)*100000) %>%
pivot_wider(names_from = c(race, prop), names_glue = "{race}_{prop}",
values_from = prop)
fips_pop %>%
pivot_longer(cols = white:hispanic, names_to = "race",
values_to = "racepop") %>%
mutate(prop = (racepop/pop)*100000) %>%
pivot_wider(names_from = race, values_from = prop)
fips_pop %>%
pivot_longer(cols = white:hispanic, names_to = "race",
values_to = "racepop") %>%
mutate(prop = (racepop/pop)*100000)
fips_pop %>%
pivot_longer(cols = white:hispanic, names_to = "race",
values_to = "racepop") %>%
group_by(name) %>%
summarize(prop = (racepop/pop)*100000)
fips_pop %>%
pivot_longer(cols = white:hispanic, names_to = "race",
values_to = "racepop") %>%
group_by(name) %>%
summarize(race, prop = (racepop/pop)*100000)
fips_pop %>%
pivot_longer(cols = white:hispanic, names_to = "race",
values_to = "racepop") %>%
group_by(name) %>%
summarize(race, prop = (racepop/pop)*100000) %>%
pivot_wider(names_from = race, values_from = prop)
fips_pop %>%
pivot_longer(cols = white:hispanic, names_to = "race",
values_to = "racepop") %>%
group_by(name) %>%
summarize(race, prop = (racepop/pop)*100000) %>%
pivot_wider(names_from = race, values_from = prop) %>%
glimpse()
fips_pop %>%
pivot_longer(cols = white:hispanic, names_to = "race",
values_to = "racepop") %>%
group_by(name) %>%
summarize(race, prop = (racepop/pop)*100000) %>%
pivot_wider(names_from = race, values_from = prop)
left_join(fips_map, fips_pop)
full <- left_join(fips_map, fips_pop)
fips_prop <- fips_pop %>%
pivot_longer(cols = white:hispanic, names_to = "race",
values_to = "racepop") %>%
group_by(name) %>%
summarize(race, prop = (racepop/pop)*100000) %>%
pivot_wider(names_from = race, values_from = prop)
full <- left_join(fips_map, fips_prop)
ggplot(full, aes(fill = white)) +
geom_sf()
full <- left_join(fips_map, fips_prop) %>%
shift_geometry()
ggplot(full, aes(fill = white)) +
geom_sf()
ggplot(full, aes(fill = white, color = white)) +
geom_sf()
race_map <- function(race){ggplot(full, aes(fill = race, color = race)) +
geom_sf()
}
race_map(white)
race_map(full$white)
race_map <- function(race){ggplot(full, aes(fill = race, color = race)) +
geom_sf() +
theme_bw() +
scale_fill_continuous(trans = "reverse")
}
race_map(full$white)
race_map <- function(race){ggplot(full, aes(fill = race, color = race)) +
geom_sf() +
theme_bw() +
scale_fill_continuous(trans = "reverse") +
scale_color_continuous(trans = "reverse")
}
race_map(full$white)
library(viridis)
race_map <- function(race){ggplot(full, aes(fill = race, color = race)) +
geom_sf() +
theme_bw() +
scale_fill_viridis() +
scale_color_viridis()
}
race_map(full$white)
race_map <- function(race){ggplot(full, aes(fill = race, color = race)) +
geom_sf() +
theme_bw() +
scale_fill_viridis(trans = "reverse") +
scale_color_viridis(trans = "reverse")
}
race_map(full$white)
race_map <- function(race){ggplot(full, aes(fill = race, color = race)) +
geom_sf() +
theme_bw() +
scale_fill_viridis(trans = "reverse", option = "A") +
scale_color_viridis(trans = "reverse", option = "A")
}
race_map(full$white)
race_map <- function(race){ggplot(full, aes(fill = race, color = race)) +
geom_sf() +
theme_bw() +
scale_fill_viridis(trans = "reverse", option = "B") +
scale_color_viridis(trans = "reverse", option = "B")
}
race_map(full$white)
race_map <- function(race){ggplot(full, aes(fill = race, color = race)) +
geom_sf() +
theme_bw() +
scale_fill_viridis(trans = "reverse", option = "B") +
scale_color_viridis(trans = "reverse", option = "B") +
theme(legend.position = "bottom")
}
race_map(full$white) +
labs(title = "Density of White People in America",
fill = "White People per 100,000")
race_map <- function(race){ggplot(full, aes(fill = race, color = race)) +
geom_sf() +
theme_bw() +
scale_fill_viridis(trans = "reverse", option = "B") +
scale_color_viridis(trans = "reverse", option = "B") +
theme(legend.position = "bottom") +
guides(color = "none")
}
race_map(full$white) +
labs(title = "Density of White People in America",
fill = "White People per 100,000")
race_map <- function(race){ggplot(full, aes(fill = race, color = race)) +
geom_sf() +
theme_bw() +
scale_fill_viridis(trans = "reverse", option = "B") +
scale_color_viridis(trans = "reverse", option = "B") +
theme(legend.position = "bottom") +
guides(fill = guide_colorbar(direction = "vertical")) +
guides(color = "none")
}
race_map(full$white) +
labs(title = "Density of White People in America",
fill = "White People per 100,000")
race_map <- function(race){ggplot(full, aes(fill = race, color = race)) +
geom_sf() +
theme_bw() +
scale_fill_viridis(trans = "reverse", option = "B",
labels = c("25K", "50K", "75K", "100K")) +
scale_color_viridis(trans = "reverse", option = "B") +
theme(legend.position = "bottom") +
guides(color = "none")
}
race_map(full$white) +
labs(title = "Density of White People in America",
fill = "White People per 100,000")
race_map <- function(race){ggplot(full, aes(fill = race, color = race)) +
geom_sf() +
theme_bw() +
scale_fill_viridis(trans = "reverse", option = "B",
breaks = c(25000, 50000, 75000, 100000),
labels = c("25K", "50K", "75K", "100K")) +
scale_color_viridis(trans = "reverse", option = "B") +
theme(legend.position = "bottom") +
guides(color = "none")
}
race_map(full$white) +
labs(title = "Density of White People in America",
fill = "White People per 100,000")
race_map(full$black) +
labs(title = "Density of Black People in America",
fill = "Black People per 100,000")
full %>%
cut_interval(white, 10)
full %>%
count(cut_interval(white, 10))
binned_race_map <- function(race){full %>%
count(cut_interval(race, 10)) %>%
ggplot(aes(fill = race, color = race)) +
geom_sf() +
theme_bw() +
scale_fill_viridis(discrete = T, option = "B", trans = "reverse") +
scale_color_viridis(discrete = T, option = "B", trans = "reverse") +
guides(color = "none")
}
binned_race_map(full$white)
binned_race_map <- function(race){full %>%
count(cut_interval(race, 10)) %>%
ggplot(aes(fill = race, color = race)) +
geom_sf() +
theme_bw() +
scale_fill_viridis(discrete = T, option = "B") +
scale_color_viridis(discrete = T, option = "B") +
guides(color = "none")
}
binned_race_map(full$white)
binned_race_map <- function(race){full %>%
count(cut_interval(race, 10)) %>%
ggplot(aes(fill = n, color = n)) +
geom_sf() +
theme_bw() +
scale_fill_viridis(discrete = T, option = "B") +
scale_color_viridis(discrete = T, option = "B") +
guides(color = "none")
}
binned_race_map(full$white)
rlang::last_error()
full %>%
count(cut_interval(white, 10)) %>%
ggplot(aes(fill = n, color = n)) +
geom_sf()
full %>%
count(cut_interval(white, 10)) %>%
ggplot(aes(fill = factor(n), color = factor(n))) +
geom_sf()
binned_race_map <- function(race){full %>%
count(cut_interval(race, 10)) %>%
ggplot(aes(fill = factor(n), color = factor(n))) +
geom_sf() +
theme_bw() +
scale_fill_viridis(discrete = T, option = "B") +
scale_color_viridis(discrete = T, option = "B") +
guides(color = "none")
}
binned_race_map(full$white)
binned_race_map <- function(race){full %>%
count(cut_interval(race, 5)) %>%
ggplot(aes(fill = factor(n), color = factor(n))) +
geom_sf() +
theme_bw() +
scale_fill_viridis(discrete = T, option = "B") +
scale_color_viridis(discrete = T, option = "B") +
guides(color = "none")
}
binned_race_map(full$white)
binned_race_map <- function(race){full %>%
count(cut = cut_interval(race, 5)) %>%
ggplot(aes(fill = factor(n), color = factor(n))) +
geom_sf() +
theme_bw() +
scale_fill_viridis(discrete = T, option = "B", labels = cut) +
scale_color_viridis(discrete = T, option = "B") +
guides(color = "none")
}
binned_race_map(full$white)
full %>%
count(cut = cut_interval(white, 5))
full %>%
count(cut = cut_interval(white, 5, labels = F))
full %>%
count(cut = cut_interval(white, 5)) %>%
mutate(as.numeric(cut))
full %>%
count(cut = cut_interval(white, 5)) %>%
mutate(as.character(cut))
binned_race_map <- function(race){full %>%
count(cut = cut_interval(race, 5)) %>%
mutate(labs = as.character(cut))
ggplot(aes(fill = factor(n), color = factor(n))) +
geom_sf() +
theme_bw() +
scale_fill_viridis(discrete = T, option = "B", labels = labs) +
scale_color_viridis(discrete = T, option = "B") +
guides(color = "none")
}
binned_race_map(full$white)
binned_race_map <- function(race){full %>%
count(cut = cut_interval(race, 5)) %>%
mutate(labs = as.character(cut)) %>%
ggplot(aes(fill = factor(n), color = factor(n))) +
geom_sf() +
theme_bw() +
scale_fill_viridis(discrete = T, option = "B", labels = labs) +
scale_color_viridis(discrete = T, option = "B") +
guides(color = "none")
}
binned_race_map(full$white)
full %>%
count(cut = cut_interval(white, 5)) %>%
mutate(labs = as.character(cut))
binned_race_map <- function(race){full %>%
count(cut = cut_interval(race, 5)) %>%
mutate(int_labs = as.character(cut)) %>%
ggplot(aes(fill = factor(n), color = factor(n))) +
geom_sf() +
theme_bw() +
scale_fill_viridis(discrete = T, option = "B", labels = int_labs) +
scale_color_viridis(discrete = T, option = "B") +
guides(color = "none")
}
binned_race_map(full$white)
binned_race_map <- function(race){full %>%
count(cut = cut_interval(race, 5)) %>%
ggplot(aes(fill = factor(n), color = factor(n))) +
geom_sf() +
theme_bw() +
scale_fill_viridis(discrete = T, option = "B") +
scale_color_viridis(discrete = T, option = "B") +
guides(color = "none")
}
binned_race_map(full$white)
binned_race_map <- function(race){full %>%
count(cut = cut_interval(race, 5)) %>%
ggplot(aes(fill = factor(cut), color = factor(cut))) +
geom_sf()
}
binned_race_map(full$white)
binned_race_map <- function(race){full %>%
count(cut = cut_interval(race, 5)) %>%
ggplot(aes(fill = factor(cut), color = factor(cut))) +
geom_sf() +
theme_bw() +
scale_fill_viridis(discrete = T, option = "B") +
scale_color_viridis(discrete = T, option = "B") +
guides(color = "none")
}
binned_race_map(full$white)
binned_race_map <- function(race){full %>%
count(cut = cut_interval(race, 5)) %>%
ggplot(aes(fill = factor(cut), color = factor(cut))) +
geom_sf() +
theme_bw() +
scale_fill_viridis(discrete = T, option = "B", direction = -1) +
scale_color_viridis(discrete = T, option = "B", direction = -1) +
guides(color = "none")
}
binned_race_map(full$white)
binned_race_map <- function(race){full %>%
count(cut = cut_interval(race, 5)) %>%
ggplot(aes(fill = factor(cut), color = factor(cut))) +
geom_sf() +
theme_bw() +
scale_fill_viridis(discrete = T, option = "B", direction = -1) +
scale_color_viridis(discrete = T, option = "B", direction = -1) +
guides(color = "none") +
theme(legend.position = "bottom")
}
binned_race_map(full$white)
binned_race_map(full$black) +
labs(title = "Density of Black People in America",
fill = "Black People per 100,000")
fips_inc %>%
left_join(fips_map)
fips_inc %>%
left_join(fips_map) %>%
ggplot(aes(fill = estimate, color = estimate)) +
geom_sf()
fips_inc %>%
left_join(fips_map) %>%
shift_geometry() %>%
ggplot(aes(fill = estimate, color = estimate)) +
geom_sf()
fips_map %>%
left_join(fips_inc) %>%
shift_geometry() %>%
ggplot(aes(fill = estimate, color = estimate)) +
geom_sf()
fips_map %>%
left_join(fips_inc) %>%
shift_geometry() %>%
ggplot(aes(fill = estimate, color = estimate)) +
geom_sf() +
theme_bw() +
scale_fill_viridis(trans = "reverse", option = "A") +
scale_color_viridis(trans = "reverse", option = "A") +
theme(legend.position = "bottom") +
labs(title = "Median Household Income in America",
fill = "Med Household Income") +
guides(color = "none")
fips_inc %>%
arrange(desc(estimate)) %>%
slice(1:10 & n-5:n)
fips_inc %>%
arrange(desc(estimate)) %>%
slice(1:10)
fips_inc %>%
arrange(desc(estimate)) %>%
slice(1:10)
fips_inc %>%
arrange(estimate) %>%
slice(1:5)
library(tidyverse)
library(socviz)
library(tidycensus)
library(tigris)
library(viridis)
options(tigris_use_cache = T)
pop_names <- tribble(
~varname, ~clean_name,
"B01003_001", "pop",
"B01001B_001", "black",
"B01001A_001", "white",
"B01001H_001", "nh_white",
"B01001I_001", "hispanic",
"B01001D_001", "asian"
)
pop_names
inc_names <- tribble(
~varname, ~clean_name,
"S1901_C01_012", "median_hh_inc")
fips_pop <- get_acs(geography = "county",
variables = pop_names$varname,
cache_table = TRUE) %>%
mutate(variable = reduce2(pop_names$varname,
pop_names$clean_name,
str_replace,
.init = variable)) %>%
select(-moe) %>%
pivot_wider(names_from = variable, values_from = estimate) %>%
rename(fips = GEOID, name = NAME)
fips_inc <- get_acs(geography = "county",
variables = inc_names$varname,
cache_table = TRUE) %>%
mutate(variable = str_replace(variable,
inc_names$varname,
inc_names$clean_name)) %>%
rename(fips = GEOID, name = NAME)
fips_map <- get_acs(geography = "county",
variables = "B01001_001",
geometry = TRUE,
shift_geo = FALSE,
cache_table = TRUE) %>%
select(GEOID, NAME, geometry) %>%
rename(fips = GEOID, name = NAME)
fips_prop <- fips_pop %>%
pivot_longer(cols = white:hispanic, names_to = "race",
values_to = "racepop") %>%
group_by(name) %>%
summarize(race, prop = (racepop/pop)*100000) %>%
pivot_wider(names_from = race, values_from = prop)
full <- left_join(fips_map, fips_prop) %>%
shift_geometry()
binned_race_map <- function(race){full %>%
count(cut = cut_interval(race, 5)) %>%
ggplot(aes(fill = factor(cut), color = factor(cut))) +
geom_sf() +
theme_bw() +
scale_fill_viridis(discrete = T, option = "B", direction = -1) +
scale_color_viridis(discrete = T, option = "B", direction = -1) +
guides(color = "none") +
theme(legend.position = "bottom")
}
binned_race_map(full$white) +
labs(title = "Density of White People in America",
fill = "White People per 100,000")
binned_race_map <- function(race){full %>%
count(cut = cut_interval(race, 5)) %>%
ggplot(aes(fill = factor(cut), color = factor(cut))) +
geom_sf() +
theme_bw() +
scale_fill_viridis(discrete = T, option = "B", direction = -1) +
scale_color_viridis(discrete = T, option = "B", direction = -1) +
guides(color = "none") +
theme(legend.position = "bottom",
legend.text = element_text(size = 3))
}
binned_race_map(full$white) +
labs(title = "Density of White People in America",
fill = "White People per 100,000")
binned_race_map <- function(race){full %>%
count(cut = cut_interval(race, 5)) %>%
ggplot(aes(fill = factor(cut), color = factor(cut))) +
geom_sf() +
theme_bw() +
scale_fill_viridis(discrete = T, option = "B", direction = -1) +
scale_color_viridis(discrete = T, option = "B", direction = -1) +
guides(color = "none") +
theme(legend.position = "bottom",
legend.text = element_text(size = 10))
}
binned_race_map(full$white) +
labs(title = "Density of White People in America",
fill = "White People per 100,000")
binned_race_map <- function(race){full %>%
count(cut = cut_interval(race, 5)) %>%
ggplot(aes(fill = factor(cut), color = factor(cut))) +
geom_sf() +
theme_bw() +
scale_fill_viridis(discrete = T, option = "B", direction = -1) +
scale_color_viridis(discrete = T, option = "B", direction = -1) +
guides(color = "none") +
theme(legend.position = "bottom",
legend.text = element_text(size = 8))
}
binned_race_map(full$white) +
labs(title = "Density of White People in America",
fill = "White People per 100,000")
