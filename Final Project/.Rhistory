ungroup() %>%
group_by(race_plurality) %>%
slice(1:5) %>%
na.omit() %>%
ggplot(aes(x = complaint_type, y = complaints, fill = race_plurality)) +
geom_col() +
facet_wrap(~ race_plurality, scales = "free") +
coord_flip() +
scale_fill_viridis(discrete = T, option = "B") +
guides(fill = "none") +
theme_bw() +
labs(title = "Most Common Complaint Types",
subtitle = "in zip codes that are plurality Black, Asian, Hispanic, or White",
y = "Frequency", x = "Complaint Type") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
age <- full %>%
mutate(age_int = cut_interval(med_age, 5)) %>%
group_by(age_int) %>%
count(age_int, complaint_type) %>%
na.omit() %>%
arrange(desc(n)) %>%
slice(1:5) %>%
mutate(age_int = case_when(age_int == "[26.6,38.3]" ~ "26.6-38.3",
age_int == "(38.3,50]" ~ "38.3-50",
age_int == "(50,61.7]" ~ "50-61.7",
age_int == "(73.4,85.1]" ~ "73.4-85.1")) %>%
ggplot(aes(x = n, y = complaint_type, fill = age_int)) +
geom_col() +
facet_wrap(~age_int, scales = "free") +
scale_fill_viridis(discrete = T, option = "B") +
guides(fill = "none") +
theme_bw() +
labs(title = "Most Common Complaint Types",
subtitle = "in zip codes sorted by median age",
x = "Frequency", y = "Complaint Type") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
sex <- full %>%
mutate(sex = case_when(mProp > 0.5 ~ "Majority Male",
mProp < 0.5 ~ "Majority Female",
mProp == 0.5 ~ "Exactly Tied")) %>%
group_by(sex) %>%
count(complaint_type) %>%
na.omit() %>%
arrange(desc(n)) %>%
slice(1:5) %>%
ggplot(aes(x = n, y = complaint_type, fill = sex)) +
geom_col() +
facet_wrap(~sex, scales = "free") +
guides(fill = "none") +
theme_bw() +
labs(title = "Most Common Complaint Types",
subtitle = "in zip codes sorted by sex",
x = "Frequency", y = "Complaint Type") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
scale_color_viridis(discrete = T, option = "B")
plot_grid(race, sex, age, ncol = 1)
full %>%
mutate(sex = case_when(mProp > 0.5 ~ "Majority Male",
mProp < 0.5 ~ "Majority Female",
mProp == 0.5 ~ "Exactly Tied")) %>%
group_by(sex) %>%
count(complaint_type) %>%
na.omit() %>%
arrange(desc(n)) %>%
slice(1:5) %>%
ggplot(aes(x = n, y = complaint_type, fill = sex)) +
geom_col() +
facet_wrap(~sex, scales = "free") +
guides(fill = "none") +
theme_bw() +
labs(title = "Most Common Complaint Types",
subtitle = "in zip codes sorted by sex",
x = "Frequency", y = "Complaint Type") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
scale_color_viridis(discrete = T, option = "B")
race <- full %>%
mutate(race_plurality = pmax(black, white, nh_white, hispanic, asian)) %>%
mutate(race_plurality = case_when(race_plurality == black ~ "Black",
race_plurality == white ~ "White",
race_plurality == nh_white ~ "nh_white",
race_plurality == hispanic ~ "Hispanic",
race_plurality == asian ~ "Asian")) %>%
group_by(race_plurality, complaint_type) %>%
mutate(complaints = n()) %>%
select(complaints) %>%
unique() %>%
arrange(desc(complaints)) %>%
ungroup() %>%
group_by(race_plurality) %>%
slice(1:5) %>%
na.omit() %>%
ggplot(aes(x = complaint_type, y = complaints, fill = race_plurality)) +
geom_col() +
facet_wrap(~ race_plurality, scales = "free") +
coord_flip() +
scale_fill_viridis(discrete = T, option = "B") +
guides(fill = "none") +
theme_bw() +
labs(title = "Most Common Complaint Types",
subtitle = "in zip codes that are plurality Black, Asian, Hispanic, or White",
y = "Frequency", x = "Complaint Type") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
age <- full %>%
mutate(age_int = cut_interval(med_age, 5)) %>%
group_by(age_int) %>%
count(age_int, complaint_type) %>%
na.omit() %>%
arrange(desc(n)) %>%
slice(1:5) %>%
mutate(age_int = case_when(age_int == "[26.6,38.3]" ~ "26.6-38.3",
age_int == "(38.3,50]" ~ "38.3-50",
age_int == "(50,61.7]" ~ "50-61.7",
age_int == "(73.4,85.1]" ~ "73.4-85.1")) %>%
ggplot(aes(x = n, y = complaint_type, fill = age_int)) +
geom_col() +
facet_wrap(~age_int, scales = "free") +
scale_fill_viridis(discrete = T, option = "B") +
guides(fill = "none") +
theme_bw() +
labs(title = "Most Common Complaint Types",
subtitle = "in zip codes sorted by median age",
x = "Frequency", y = "Complaint Type") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
sex <- full %>%
mutate(sex = case_when(mProp > 0.5 ~ "Majority Male",
mProp < 0.5 ~ "Majority Female",
mProp == 0.5 ~ "Exactly Tied")) %>%
group_by(sex) %>%
count(complaint_type) %>%
na.omit() %>%
arrange(desc(n)) %>%
slice(1:5) %>%
ggplot(aes(x = n, y = complaint_type, fill = sex)) +
geom_col() +
facet_wrap(~sex, scales = "free") +
guides(fill = "none") +
theme_bw() +
labs(title = "Most Common Complaint Types",
subtitle = "in zip codes sorted by sex",
x = "Frequency", y = "Complaint Type") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
scale_fill_viridis(discrete = T, option = "B")
plot_grid(race, sex, age, ncol = 1)
sex
full %>%
group_by(zip) %>%
count(complaint_type) %>%
arrange(desc(n)) %>%
mutate(prop = n/sum(n)) %>%
slice(1) %>%
ungroup() %>%
group_by(complaint_type) %>%
mutate(complaint_prop = n/sum(n)) %>%
mutate(complaint = case_when(complaint_prop < .1 ~ "Other",
T ~ complaint_type)) %>%
inner_join(zips) %>%
ggplot(aes(fill = complaint, geometry = geometry)) +
geom_sf() +
theme_nymap() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 16),
plot.subtitle = element_text(hjust = 0.5, size = 11),
plot.margin=unit(c(1,2,1,1),"cm")) +
scale_fill_viridis(discrete = T, option = "B") +
labs(title = "Most Common Complaint Types", subtitle = "By NYC Zip Code",
fill = "Complaint Type:",
caption = "Note: \"other\" includes zipcodes with <10% any one complaint type")
# Chunk 1: setup
knitr::opts_chunk$set(echo = F, warning = F, message = F)
# Chunk 2: libraries
library(tidyverse)
library(tidycensus)
library(tigris)
library(socviz)
library(nycomplaints)
library(viridis)
library(ggridges)
library(cowplot)
library(knitr)
options(tigris_use_cache = T)
# Chunk 3: nymap
theme_nymap <- function(base_size=9, base_family="") {
require(grid)
theme_bw(base_size=base_size, base_family=base_family) %+replace%
theme(axis.line=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid=element_blank(),
panel.spacing=unit(0, "lines"),
plot.background=element_blank(),
legend.justification = c(0,0),
legend.position = c(0.1, 0.6),
legend.direction = "horizontal"
)
}
#There is no such thing as code theft, only code repurposing.
# Chunk 5: council-dist-map
council_dist <-
sf::read_sf(dsn = "C:/Users/Dav/Downloads/nycc_22a/nycc_22a/nycc.shp")
#Note: my apologies that this isn't fully reproducible, I didn't have time to
#figure out how to trace the file from its online .zip folder. This shapefile
#is included in my Sakai dropbox.
nycomplaints %>%
transform(NYCC = substr(account, 1, 4), CounDist = substr(account, 5, 6)) %>%
mutate(CounDist = as.integer(CounDist)) %>%
count(CounDist) %>%
inner_join(council_dist) %>%
ggplot(aes(fill = n, geometry = geometry)) +
geom_sf() +
theme_nymap() +
labs(title = "Complaints by Council District",fill = "Number of Complaints") +
theme(legend.position = "right", legend.direction = "vertical",
plot.title = element_text(hjust = 0.5, size = 16)) +
scale_fill_viridis(option = "B", trans = "reverse")
# Chunk 6: open-date-fig
nycomplaints %>%
group_by(complaint_type) %>%
mutate(n = n()) %>%
ggplot(aes(x = opendate, y = complaint_type, fill = n)) +
geom_density_ridges(alpha = 0.5) +
labs(title = "Distribution: Open Date of Different Complaint Types",
x = "Open Date", y = "Complaint Type", fill = "Number of Complaints") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_viridis(option = "B", trans = "reverse")
# Chunk 7: days-open-district
cd <- nycomplaints %>%
mutate(timeopen = closedate-opendate) %>%
separate(timeopen, c("nDays", "days"), " ") %>%
select(-days) %>%
mutate(nDays = as.integer(nDays))
cd %>%
group_by(account) %>%
summarize(mDays = mean(nDays, na.rm = T), n = n()) %>%
ggplot(aes(x = mDays, y = account, fill = n)) +
geom_col() +
scale_y_discrete(limits = rev) +
scale_fill_viridis(option = "A") +
theme_bw() +
labs(title = "Average Number of Days to Close a Complaint",
subtitle = "By NYC Council District", x = "Mean Number of Days",
y = "Council District", fill = "Total Number of Cases") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
# Chunk 8: days-open-complaint-type
cd %>%
group_by(complaint_type) %>%
summarize(mDays = mean(nDays, na.rm = T), n = n()) %>%
ggplot(aes(x = mDays, y = reorder(complaint_type, mDays), fill = n)) +
geom_col() +
scale_fill_viridis(option = "A") +
theme_bw() +
labs(title = "Average Number of Days to Close a Complaint",
subtitle = "By Complaint Type", x = "Mean Number of Days",
y = "Complaint Type", fill = "Total Number of Cases") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
# Chunk 11: zip-code-map
zips <- nycdogs::nyc_zips %>%
mutate(zip = as.character(zip_code))
nycomplaints %>%
count(zip) %>%
inner_join(zips) %>%
ggplot(aes(fill = n, geometry = geometry)) +
geom_sf() +
theme_nymap() +
scale_fill_viridis(option = "B", trans = "reverse") +
labs(title = "Cases Opened by Zip Code", fill = "Number of Cases") +
theme(plot.title = element_text(hjust = 0.5, size = 16),
legend.position = "bottom")
# Chunk 12: council-dist-consistency-map
nycomplaints %>%
transform(NYCC = substr(council_dist, 1, 4),
CounDist = substr(council_dist, 5, 7)) %>%
mutate(CounDist = as.integer(CounDist)) %>%
filter(!is.na(CounDist) & CounDist <= 51 & CounDist != 0) %>%
transform(NYCC2 = substr(account, 1, 4),
CounDistComp = substr(account, 5, 6)) %>%
mutate(CounDistComp = as.integer(CounDistComp)) %>%
group_by(CounDistComp) %>%
mutate(perc = if_else(CounDistComp == CounDist, 1, 0)) %>%
summarize(perc = 1 - mean(perc)) %>%
inner_join(council_dist, by = c("CounDistComp" = "CounDist")) %>%
ggplot(aes(fill = perc, geometry = geometry)) +
geom_sf() +
theme_nymap() +
scale_fill_viridis(option = "B", trans = "reverse") +
labs(title = "Complaints Filed by Resident of Different District",
fill = "Percentage of Complaints") +
theme(plot.title = element_text(hjust = 0.5, size = 16),
legend.position = "bottom")
# Chunk 14: clean-data
nycomplaints <- nycomplaints %>%
mutate(complaint_type = tolower(complaint_type)) %>%
filter(complaint_type != "@getxlate.udf_code_genera")
# Chunk 15: join-data
pop_inc <- get_acs(
geography = "zcta",
variables = c("B01003_001", "B06011_001", "B01002_001",
"B01001_002", "B01001_026"),
year = 2020#,
#geometry = T
) %>%
separate(NAME, into = c("name", "zip"), sep = " ") %>%
pivot_wider(names_from = variable,
values_from = c(estimate, moe)) %>%
mutate(pop = estimate_B01003_001,
pop_moe = moe_B01003_001,
med_income = estimate_B06011_001,
med_income_moe = moe_B06011_001,
med_age = estimate_B01002_001,
med_age_moe = moe_B01002_001,
male = estimate_B01001_002,
male_moe = moe_B01001_002,
female = estimate_B01001_026,
female_moe = moe_B01001_026) %>%
mutate(mProp = male/(male + female),
fProp = female/(male + female))
#%>%
#shift_geometry()
pop_names <- tribble(
~varname, ~clean_name,
"B01003_001", "pop",
"B01001B_001", "black",
"B01001A_001", "white",
"B01001H_001", "nh_white",
"B01001I_001", "hispanic",
"B01001D_001", "asian"
)
race <- get_acs(geography = "zcta",
variables = pop_names$varname,
cache_table = TRUE,
year = 2020) %>%
mutate(variable = reduce2(pop_names$varname,
pop_names$clean_name,
str_replace,
.init = variable)) %>%
select(-moe) %>%
pivot_wider(names_from = variable, values_from = estimate) %>%
rename(fips = GEOID, name = NAME) %>%
separate(name, into = c("name", "zip"), sep = " ")
full <- nycomplaints %>%
left_join(pop_inc) %>%
left_join(race) %>%
inner_join(zips) %>%
mutate(complaint_type = stringr::str_to_title(complaint_type))
#Note: by getting rid of the observations that do not contain an NYC zip code,
#we lose 18,129 observations. However, this is probably a worthy loss, to
#consider all analysis within what we know firmly to be NYC residents.
# Chunk 16: demographic-figs
race <- full %>%
mutate(race_plurality = pmax(black, white, nh_white, hispanic, asian)) %>%
mutate(race_plurality = case_when(race_plurality == black ~ "Black",
race_plurality == white ~ "White",
race_plurality == nh_white ~ "nh_white",
race_plurality == hispanic ~ "Hispanic",
race_plurality == asian ~ "Asian")) %>%
group_by(race_plurality, complaint_type) %>%
mutate(complaints = n()) %>%
select(complaints) %>%
unique() %>%
arrange(desc(complaints)) %>%
ungroup() %>%
group_by(race_plurality) %>%
slice(1:5) %>%
na.omit() %>%
ggplot(aes(x = complaint_type, y = complaints, fill = race_plurality)) +
geom_col() +
facet_wrap(~ race_plurality, scales = "free") +
coord_flip() +
scale_fill_viridis(discrete = T, option = "B") +
guides(fill = "none") +
theme_bw() +
labs(title = "Most Common Complaint Types",
subtitle = "in zip codes that are plurality Black, Asian, Hispanic, or White",
y = "Frequency", x = "Complaint Type") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
age <- full %>%
mutate(age_int = cut_interval(med_age, 5)) %>%
group_by(age_int) %>%
count(age_int, complaint_type) %>%
na.omit() %>%
arrange(desc(n)) %>%
slice(1:5) %>%
mutate(age_int = case_when(age_int == "[26.6,38.3]" ~ "26.6-38.3",
age_int == "(38.3,50]" ~ "38.3-50",
age_int == "(50,61.7]" ~ "50-61.7",
age_int == "(73.4,85.1]" ~ "73.4-85.1")) %>%
ggplot(aes(x = n, y = complaint_type, fill = age_int)) +
geom_col() +
facet_wrap(~age_int, scales = "free") +
scale_fill_viridis(discrete = T, option = "B") +
guides(fill = "none") +
theme_bw() +
labs(title = "Most Common Complaint Types",
subtitle = "in zip codes sorted by median age",
x = "Frequency", y = "Complaint Type") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
sex <- full %>%
mutate(sex = case_when(mProp > 0.5 ~ "Majority Male",
mProp < 0.5 ~ "Majority Female",
mProp == 0.5 ~ "Exactly Tied")) %>%
group_by(sex) %>%
count(complaint_type) %>%
na.omit() %>%
arrange(desc(n)) %>%
slice(1:5) %>%
ggplot(aes(x = n, y = complaint_type, fill = sex)) +
geom_col() +
facet_wrap(~sex, scales = "free") +
guides(fill = "none") +
theme_bw() +
labs(title = "Most Common Complaint Types",
subtitle = "in zip codes sorted by sex",
x = "Frequency", y = "Complaint Type") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
scale_fill_viridis(discrete = T, option = "B")
plot_grid(race, sex, age, ncol = 1)
# Chunk 17: med-income-bars
full %>%
mutate(inc = cut_interval(med_income, 5)) %>%
group_by(zip, complaint_type) %>%
summarize(inc, pop, n = n()) %>%
mutate(per100 = (n/pop)*100000) %>%
ungroup() %>%
group_by(inc, complaint_type) %>%
summarize(n = n(), per100 = mean(per100, na.rm = T)) %>%
#group_by(inc, complaint_type) %>%
#summarize(n = n(), popsum = sum(pop)) %>%
#mutate(per100 = (n/popsum)*100000) %>%
arrange(desc(per100)) %>%
na.omit() %>%
slice(1:5) %>%
mutate(income = case_when(inc == "[8.46e+03,3.42e+04]" ~ "$8,460-$34,200",
inc == "(3.42e+04,6e+04]" ~ "$34,200-$60,000",
inc == "(6e+04,8.58e+04]" ~ "$60,000-$85,800",
inc == "(8.58e+04,1.12e+05]" ~ "$85,800-$112,000",
inc == "(1.12e+05,1.37e+05]" ~ "$112,000-$137,000"))%>%
mutate(across(income, factor, levels = c("$8,460-$34,200", "$34,200-$60,000",
"$60,000-$85,800", "$85,800-$112,000",
"$112,000-$137,000"))) %>%
ggplot(aes(x = per100, y = complaint_type, fill = income)) +
geom_col() +
facet_wrap(~income, scales = "free", ncol = 2) +
theme_bw() +
guides(fill = "none") +
labs(title = "Most Common Complaint Types By Income, Per 100,000",
x = "Complaints per 100,000", y = "Complaint Type") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_viridis(discrete = T, option = "B")
# Chunk 18: med-income-scatterplots
full %>%
group_by(zip, complaint_type) %>%
summarize(n = n(), pop, med_income) %>%
mutate(per100 = (n/pop)*100000) %>%
ungroup() %>%
group_by(complaint_type, med_income) %>%
summarize(n = n(), per100 = mean(per100, na.rm = T)) %>%
ungroup() %>%
group_by(complaint_type) %>%
mutate(nComplaint = n()) %>%
filter(nComplaint > 100) %>%
ggplot(aes(x = med_income, y = per100, color = complaint_type)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", se = F, color = "black") +
facet_wrap(~complaint_type, scales = "free", ncol = 3) +
theme_bw() +
guides(color = "none") +
labs(title = "Relationship between Median Income and Complaints Filed",
subtitle = "In NYC Zip Codes", x = "Median Income",
y = "Complaints Filed per 100,000") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
full %>%
mutate(inc = cut_interval(med_income, 5)) %>%
mutate(income = case_when(inc == "[8.46e+03,3.42e+04]" ~ "$8,460-$34,200",
inc == "(3.42e+04,6e+04]" ~ "$34,200-$60,000",
inc == "(6e+04,8.58e+04]" ~ "$60,000-$85,800",
inc == "(8.58e+04,1.12e+05]" ~ "$85,800-$112,000",
inc == "(1.12e+05,1.37e+05]" ~ "$112,000-$137,000"))%>%
mutate(across(income, factor, levels = c("$8,460-$34,200", "$34,200-$60,000",
"$60,000-$85,800", "$85,800-$112,000",
"$112,000-$137,000"))) %>%
group_by(zip) %>%
summarize(income, geometry) %>%
slice(1) %>%
na.omit() %>%
ggplot(aes(fill = fct_rev(income), geometry = geometry)) +
geom_sf() +
theme_nymap() +
scale_fill_viridis(discrete = T, option = "B",
guide = guide_legend(reverse = T)) +
labs(title = "Median Inome", subtitle = "By NYC Zip Code",
fill = "Median Income") +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 16),
plot.subtitle = element_text(hjust = 0.5, size = 11),
legend.text = element_text(size = 6.5)) +
guides(fill = guide_legend(nrow = 2, byrow = T))
