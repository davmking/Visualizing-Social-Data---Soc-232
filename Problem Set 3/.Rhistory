slice(150:164)
stmf %>%
filter(cname == "Estonia" & year == "2020" & sex != "b") %>%
group_by(sex) %>%
summarize(cases = sum(rate_total)/(52*5))
stmf %>%
filter(cname == "Belgium") %>%
filter(year != 2021) %>%
mutate(Year = if_else(year == 2020, "2020", "2000-2019")) %>%
group_by(year, week) %>%
mutate(deaths = sum(unique(deaths_total))) %>%
ggplot(aes(x = week, y = deaths, fill = factor(year), color = Year)) +
geom_line(size = 1) +
scale_color_manual(values=c("grey80", "red")) +
labs(title = "Weekly recorded deaths in Belgium, 2000-2020",
x = "Week of the Year", y = "Total Deaths") +
theme_minimal() +
theme(legend.position = "top", axis.text.x=element_blank(),
axis.text.y=element_blank())
stmf %>%
filter(cname == "Estonia" & year == "2020" & sex != "b") %>%
#count(sex, rate_total) %>%
#group_by(sex) %>%
#summarize(dRate = weighted.mean(rate_total, n)) %>%
ggplot(aes(x = week, y = rate_total, color = sex)) +
geom_line() +
#geom_col() +
guides(color = "none") +
labs(title = "2020 Mortality Rates in Estonia",
x = "Date", y = "Death Rate") +
theme_bw()
stmf %>%
filter(cname == "Estonia" & year == "2020" & sex != "b") %>%
#count(sex, rate_total) %>%
#group_by(sex) %>%
#summarize(dRate = weighted.mean(rate_total, n)) %>%
ggplot(aes(x = week, y = rate_total, color = sex)) +
geom_line() +
#geom_col() +
labs(title = "2020 Mortality Rates in Estonia",
x = "Date", y = "Death Rate") +
theme_bw()
stmf %>%
filter(cname == "Estonia" & year == "2020" & sex != "b") %>%
group_by(sex) %>%
summarize(cases = sum(rate_total)/(52*5))
library(tidyverse)
library(socviz)
library(slider)
library(covdata)
library(cowplot)
stmf %>%
filter(cname == "Estonia" & year == "2020" & sex != "b") %>%
group_by(sex) %>%
summarize(cases = sum(rate_total)/(52*5)) %>%
ggplot(aes(x = sex, y = cases)) +
geom_col()
stmf %>%
filter(cname == "Estonia" & year == "2020" & sex != "b") %>%
group_by(sex) %>%
summarize(cases = sum(rate_total)/(52*5)) %>%
ggplot(aes(x = sex, y = cases, color = sex)) +
geom_col()
stmf %>%
filter(cname == "Estonia" & year == "2020" & sex != "b") %>%
group_by(sex) %>%
summarize(cases = sum(rate_total)/(52*5)) %>%
ggplot(aes(x = sex, y = cases, fill = sex)) +
geom_col() +
labs(title = "2020 Mortality Rate in Estonia", x = "Sex", y = "Deaths") +
guides(fill = "none") +
theme_bw()
a <- stmf %>%
filter(cname == "Estonia" & year == "2020" & sex != "b") %>%
#count(sex, rate_total) %>%
#group_by(sex) %>%
#summarize(dRate = weighted.mean(rate_total, n)) %>%
ggplot(aes(x = week, y = rate_total, color = sex)) +
geom_line() +
#geom_col() +
labs(title = "2020 Mortality Rates in Estonia",
x = "Date", y = "Death Rate", color = "Sex") +
theme_bw()
b <- stmf %>%
filter(cname == "Estonia" & year == "2020" & sex != "b") %>%
group_by(sex) %>%
summarize(cases = sum(rate_total)/(52*5)) %>%
ggplot(aes(x = sex, y = cases, fill = sex)) +
geom_col() +
labs(title = "2020 Mortality Rate in Estonia", x = "Sex", y = "Deaths") +
guides(fill = "none") +
theme_bw()
plot_grid(a, b)
a <- stmf %>%
filter(cname == "Estonia" & year == "2020" & sex != "b") %>%
#count(sex, rate_total) %>%
#group_by(sex) %>%
#summarize(dRate = weighted.mean(rate_total, n)) %>%
ggplot(aes(x = week, y = rate_total, color = sex)) +
geom_line() +
#geom_col() +
labs(title = "2020 Mortality Rates in Estonia",
x = "Date", y = "Death Rate", color = "Sex") +
theme_bw()
b <- stmf %>%
filter(cname == "Estonia" & year == "2020" & sex != "b") %>%
group_by(sex) %>%
summarize(cases = sum(rate_total)/(52*5)) %>%
ggplot(aes(x = sex, y = cases, fill = sex)) +
geom_col() +
labs(title = "2020 Mortality Rate in Estonia", x = "Sex", y = "Deaths") +
guides(fill = "none") +
theme_bw()
plot_grid(a, b, ncol = 1)
plot_grid(a, b, rel_widths = c(2, 1))
a <- stmf %>%
filter(cname == "Estonia" & year == "2020" & sex != "b") %>%
ggplot(aes(x = week, y = rate_total, color = sex)) +
geom_line(size = 1) +
labs(title = "2020 Mortality Rates in Estonia",
x = "Date", y = "Death Rate", color = "Sex") +
theme_bw()
b <- stmf %>%
filter(cname == "Estonia" & year == "2020" & sex != "b") %>%
group_by(sex) %>%
summarize(cases = sum(rate_total)/(52*5)) %>%
ggplot(aes(x = sex, y = cases, fill = sex)) +
geom_col() +
labs(title = "2020 Mortality Rate in Estonia", x = "Sex", y = "Deaths") +
guides(fill = "none") +
theme_bw()
plot_grid(a, b, rel_widths = c(2, 1))
stmf %>%
filter(cname == "Estonia" & year == "2020" &
age_group == "75-84" & sex != "b") %>%
group_by(sex) %>%
summarize(dRate = sum(death_rate)/52)
stmf %>%
filter(cname == "Estonia" & year == "2020" &
age_group == "75-84" & sex != "b") %>%
group_by(sex) %>%
summarize(dRate = sum(death_rate)/52) %>%
ggplot(aes(x = sex, y = dRate, fill = sex)) +
geom_col() +
guides(fill = "none") +
labs(title = "2020 Mortality Rates in Estonia",
x = "Sex", y = "Crude Death Rate") +
theme_bw()
stmf %>%
filter(cname == "Estonia" & year == "2020" &
age_group == "75-84" & sex != "b") %>%
ggplot(aes(x = week, y = death_rate, color = sex)) +
geom_line(size = 1) +
labs(title = "2020 Mortality Rate of 75-84 Year Olds in Estonia",
x = "Sex", y = "Death Rate", color = "Sex") +
theme_bw()
c <- stmf %>%
filter(cname == "Estonia" & year == "2020" &
age_group == "75-84" & sex != "b") %>%
group_by(sex) %>%
summarize(dRate = sum(death_rate)/52) %>%
ggplot(aes(x = sex, y = dRate, fill = sex)) +
geom_col() +
guides(fill = "none") +
labs(title = "2020 Mortality Rates in Estonia",
x = "Sex", y = "Death Rate") +
theme_bw()
d <- stmf %>%
filter(cname == "Estonia" & year == "2020" &
age_group == "75-84" & sex != "b") %>%
ggplot(aes(x = week, y = death_rate, color = sex)) +
geom_line(size = 1) +
labs(title = "2020 Mortality Rate of 75-84 Year Olds in Estonia",
x = "Sex", y = "Death Rate", color = "Sex") +
theme_bw()
plot_grid(d, c, rel_widths = c(2, 1))
library(tidyverse)
library(socviz)
library(slider)
library(covdata)
library(cowplot)
stmf %>%
filter(cname == "Belgium") %>%
filter(year != 2021) %>%
mutate(Year = if_else(year == 2020, "2020", "2000-2019")) %>%
group_by(year, week) %>%
mutate(deaths = sum(unique(deaths_total))) %>%
ggplot(aes(x = week, y = deaths, fill = factor(year), color = Year)) +
geom_line(size = 1) +
scale_color_manual(values=c("grey80", "red")) +
labs(title = "Weekly recorded deaths in Belgium, 2000-2020",
x = "Week of the Year", y = "Total Deaths") +
theme_minimal() +
theme(legend.position = "top", axis.text.x=element_blank(),
axis.text.y=element_blank())
a <- stmf %>%
filter(cname == "Estonia" & year == "2020" & sex != "b") %>%
ggplot(aes(x = week, y = rate_total, color = sex)) +
geom_line(size = 1) +
labs(title = "2020 Mortality Rates in Estonia",
x = "Date", y = "Death Rate", color = "Sex") +
theme_bw()
b <- stmf %>%
filter(cname == "Estonia" & year == "2020" & sex != "b") %>%
group_by(sex) %>%
summarize(cases = sum(rate_total)/(52*5)) %>%
ggplot(aes(x = sex, y = cases, fill = sex)) +
geom_col() +
labs(title = "Mortality Rate", x = "Sex", y = "Deaths") +
guides(fill = "none") +
theme_bw()
plot_grid(a, b, rel_widths = c(2, 1))
c <- stmf %>%
filter(cname == "Estonia" & year == "2020" &
age_group == "75-84" & sex != "b") %>%
group_by(sex) %>%
summarize(dRate = sum(death_rate)/52) %>%
ggplot(aes(x = sex, y = dRate, fill = sex)) +
geom_col() +
guides(fill = "none") +
labs(title = "Mortality Rate",
x = "Sex", y = "Death Rate") +
theme_bw()
d <- stmf %>%
filter(cname == "Estonia" & year == "2020" &
age_group == "75-84" & sex != "b") %>%
ggplot(aes(x = week, y = death_rate, color = sex)) +
geom_line(size = 1) +
labs(title = "2020 Mortality Rate", subtitle = "75-84 year olds in Estonia",
x = "Week", y = "Death Rate", color = "Sex") +
theme_bw()
plot_grid(d, c, rel_widths = c(2, 1))
c <- stmf %>%
filter(cname == "Estonia" & year == "2020" &
age_group == "75-84" & sex != "b") %>%
group_by(sex) %>%
summarize(dRate = sum(death_rate)/52) %>%
ggplot(aes(x = sex, y = dRate, fill = sex)) +
geom_col() +
guides(fill = "none") +
labs(title = "Mortality Rate",
x = "Sex", y = "Death Rate") +
theme_bw()
d <- stmf %>%
filter(cname == "Estonia" & year == "2020" &
age_group == "75-84" & sex != "b") %>%
ggplot(aes(x = week, y = death_rate, color = sex)) +
geom_line(size = 1) +
labs(title = "2020 Mortality Rate", subtitle = "75-84 year olds in Estonia",
x = "Week", y = "Death Rate", color = "Sex") +
theme_bw()
plot_grid(d, c, rel_widths = c(2, 1))
nytcovstate
nytcovstate <- nytcovstate %>%
group_by(state) %>%
mutate(daily_cases = cases - lag(cases, order_by = date),
daily_deaths = deaths - lag(deaths, order_by = date))
state_pops <- uspop %>%
filter(sex_id == "totsex", hisp_id == "tothisp") %>%
select(state_abbr, statefips, pop, state) %>%
rename(name = state, state = state_abbr, fips = statefips) %>%
mutate(state = replace(state, fips == "11", "DC"))
nytcovstate <- nytcovstate %>%
left_join(state_pops, by = "fips")
nytcovstate %>%
group_by(state.x) %>%
summarize(nCase = sum(daily_cases, na.rm = T),
nDeath = sum(daily_deaths, na.rm = T),
popul = sum(pop, na.rm = T)) %>%
summarize(case_rate = (nCase/popul) * 100000,
death_rate = (nDeath/popul) * 100000)
nytcovstate %>%
filter(state.y == "MD" | state.y == "TX" | state.y == "CA") %>%
ggplot(aes(x = date, y = daily_cases, color = state.x)) +
geom_line() +
facet_wrap(~ state.x, ncol = 1, scales = "free_y") +
labs(title = "Daily Case Counts", x = "Date", y = "Daily Cases") +
guides(color = "none") +
theme_bw()
nytcovstate %>%
filter(state.y == "MD" | state.y == "TX" | state.y == "CA") %>%
group_by(state.x) %>%
mutate(avg = slide_dbl(daily_cases, mean, .before = 6)) %>%
ggplot(aes(x = date, color = state.x)) +
geom_line(aes(y = daily_cases), alpha = 0.5) +
geom_line(aes(y = avg), color = "black", size = 1) +
facet_wrap(~ state.x, ncol = 1, scales = "free_y") +
labs(title = "Daily Case Counts", x = "Date", y = "Daily Cases") +
guides(color = "none") +
theme_bw()
apple_mobility %>%
filter(region == "Montgomery County" & sub_region == "Maryland")
apple_mobility %>%
filter(region == "Montgomery County" & sub_region == "Maryland") %>%
ggplot(aes(x = date, y = score, color = transportation_type)) +
geom_line() +
facet_wrap(~ transportation_type, ncol = 1, scales = "free_y") +
labs(title = "Trends in Types of Transit Taken", x = "Date",
y = "Score Relative to Day 1") +
guides(color = "none") +
theme_bw()
apple_mobility %>%
filter(sub_region == "Maryland" & region == "Montgomery County" |
sub_region == "North Carolina" & region == "Durham County") %>%
ggplot(aes(x = date, y = score, color = transportation_type)) +
geom_line() +
facet_grid(transportation_type ~ region, scales = "free_y") +
labs(title = "Trends in Types of Transit Taken",
subtitle = "Durham County, NC vs Montgomery County, MD",
x = "Date", y = "Score Relative to Day 1") +
guides(color = "none") +
theme_bw()
stmf %>%
filter(cname == "Belgium") %>%
filter(year != 2021) %>%
mutate(Year = if_else(year == 2020, "2020", "2000-2019")) %>%
group_by(year, week) %>%
mutate(deaths = sum(unique(deaths_total))) %>%
ggplot(aes(x = week, y = deaths, fill = factor(year), color = Year)) +
geom_line(size = 1) +
scale_color_manual(values=c("grey80", "red")) +
labs(title = "Weekly recorded deaths in Belgium, 2000-2020",
x = "Week of the Year", y = "Total Deaths") +
theme_minimal() +
theme(legend.position = "top", axis.text.x=element_blank(),
axis.text.y=element_blank())
stmf %>%
filter(cname == "Belgium") %>%
filter(year != 2021) %>%
mutate(Year = if_else(year == 2020, "2020", "2000-2019")) %>%
group_by(year, week) %>%
mutate(deaths = sum(unique(deaths_total))) %>%
ggplot(aes(x = week, y = deaths, fill = factor(year), color = Year)) +
geom_line(size = 0.5) +
scale_color_manual(values=c("grey80", "red")) +
labs(title = "Weekly recorded deaths in Belgium, 2000-2020",
x = "Week of the Year", y = "Total Deaths") +
theme_minimal() +
theme(legend.position = "top", axis.text.x=element_blank(),
axis.text.y=element_blank())
library(tidyverse)
library(socviz)
library(slider)
library(covdata)
library(cowplot)
?stmf
stmf %>%
filter(cname == "Belgium") %>%
filter(year != 2021) %>%
mutate(Year = if_else(year == 2020, "2020", "2000-2019")) %>%
group_by(year, week) %>%
mutate(deaths = sum(unique(deaths_total))) %>%
ggplot(aes(x = week, y = deaths, fill = factor(year), color = Year)) +
geom_line(size = 0.5) +
scale_color_manual(values=c("grey80", "red")) +
labs(title = "Weekly recorded deaths in Belgium, 2000-2020",
x = "Week of the Year", y = "Total Deaths") +
theme_minimal() +
theme(legend.position = "top", axis.text.x=element_blank(),
axis.text.y=element_blank())
?covdata
stmf %>%
filter(cname == "Belgium") %>%
filter(year != 2021) %>%
mutate(Year = if_else(year == 2020, "2020", "2000-2019")) %>%
group_by(year, week) %>%
mutate(deaths = sum(deaths_total)) %>%
ggplot(aes(x = week, y = deaths, fill = factor(year), color = Year)) +
geom_line(size = 0.5) +
scale_color_manual(values=c("grey80", "red")) +
labs(title = "Weekly recorded deaths in Belgium, 2000-2020",
x = "Week of the Year", y = "Total Deaths") +
theme_minimal() +
theme(legend.position = "top", axis.text.x=element_blank(),
axis.text.y=element_blank())
a <- stmf %>%
filter(cname == "Estonia" & year == "2020" & sex != "b") %>%
ggplot(aes(x = week, y = rate_total, color = sex)) +
geom_line(size = 1) +
labs(title = "2020 Mortality Rates in Estonia",
x = "Date", y = "Death Rate", color = "Sex") +
theme_bw()
b <- stmf %>%
filter(cname == "Estonia" & year == "2020" & sex != "b") %>%
group_by(sex) %>%
summarize(cases = sum(rate_total)/(52*5)) %>%
ggplot(aes(x = sex, y = cases, fill = sex)) +
geom_col() +
labs(title = "Mortality Rate", x = "Sex", y = "Deaths") +
guides(fill = "none") +
theme_bw()
plot_grid(a, b, rel_widths = c(2, 1))
c <- stmf %>%
filter(cname == "Estonia" & year == "2020" &
age_group == "75-84" & sex != "b") %>%
group_by(sex) %>%
summarize(dRate = sum(death_rate)/52) %>%
ggplot(aes(x = sex, y = dRate, fill = sex)) +
geom_col() +
guides(fill = "none") +
labs(title = "Mortality Rate",
x = "Sex", y = "Death Rate") +
theme_bw()
d <- stmf %>%
filter(cname == "Estonia" & year == "2020" &
age_group == "75-84" & sex != "b") %>%
ggplot(aes(x = week, y = death_rate, color = sex)) +
geom_line(size = 1) +
labs(title = "2020 Mortality Rate", subtitle = "75-84 year olds in Estonia",
x = "Week", y = "Death Rate", color = "Sex") +
theme_bw()
plot_grid(d, c, rel_widths = c(2, 1))
nytcovstate
nytcovstate <- nytcovstate %>%
group_by(state) %>%
mutate(daily_cases = cases - lag(cases, order_by = date),
daily_deaths = deaths - lag(deaths, order_by = date))
state_pops <- uspop %>%
filter(sex_id == "totsex", hisp_id == "tothisp") %>%
select(state_abbr, statefips, pop, state) %>%
rename(name = state, state = state_abbr, fips = statefips) %>%
mutate(state = replace(state, fips == "11", "DC"))
nytcovstate <- nytcovstate %>%
left_join(state_pops, by = "fips")
nytcovstate %>%
group_by(state.x) %>%
summarize(nCase = sum(daily_cases, na.rm = T),
nDeath = sum(daily_deaths, na.rm = T),
popul = sum(pop, na.rm = T)) %>%
summarize(case_rate = (nCase/popul) * 100000,
death_rate = (nDeath/popul) * 100000)
nytcovstate %>%
group_by(state.x) %>%
summarize(nCase = sum(daily_cases, na.rm = T),
nDeath = sum(daily_deaths, na.rm = T),
popul = sum(pop, na.rm = T)) %>%
summarize(state.x, case_rate = (nCase/popul) * 100000,
death_rate = (nDeath/popul) * 100000)
nytcovstate %>%
filter(state.y == "MD" | state.y == "TX" | state.y == "CA") %>%
ggplot(aes(x = date, y = daily_cases, color = state.x)) +
geom_line() +
facet_wrap(~ state.x, ncol = 1, scales = "free_y") +
labs(title = "Daily Case Counts", x = "Date", y = "Daily Cases") +
guides(color = "none") +
theme_bw()
nytcovstate %>%
filter(state.y == "MD" | state.y == "TX" | state.y == "CA") %>%
group_by(state.x) %>%
mutate(avg = slide_dbl(daily_cases, mean, .before = 6)) %>%
ggplot(aes(x = date, color = state.x)) +
geom_line(aes(y = daily_cases), alpha = 0.5) +
geom_line(aes(y = avg), color = "black", size = 1) +
facet_wrap(~ state.x, ncol = 1, scales = "free_y") +
labs(title = "Daily Case Counts", x = "Date", y = "Daily Cases") +
guides(color = "none") +
theme_bw()
apple_mobility %>%
filter(region == "Montgomery County" & sub_region == "Maryland")
apple_mobility %>%
filter(region == "Montgomery County" & sub_region == "Maryland") %>%
ggplot(aes(x = date, y = score, color = transportation_type)) +
geom_line() +
facet_wrap(~ transportation_type, ncol = 1, scales = "free_y") +
labs(title = "Trends in Types of Transit Taken", x = "Date",
y = "Score Relative to Day 1") +
guides(color = "none") +
theme_bw()
apple_mobility %>%
filter(sub_region == "Maryland" & region == "Montgomery County" |
sub_region == "North Carolina" & region == "Durham County") %>%
ggplot(aes(x = date, y = score, color = transportation_type)) +
geom_line() +
facet_grid(transportation_type ~ region, scales = "free_y") +
labs(title = "Trends in Types of Transit Taken",
subtitle = "Durham County, NC vs Montgomery County, MD",
x = "Date", y = "Score Relative to Day 1") +
guides(color = "none") +
theme_bw()
library(tidyverse)
library(socviz)
library(slider)
library(covdata)
library(cowplot)
nytcovstate
nytcovstate <- nytcovstate %>%
group_by(state) %>%
mutate(daily_cases = cases - lag(cases, order_by = date),
daily_deaths = deaths - lag(deaths, order_by = date))
state_pops <- uspop %>%
filter(sex_id == "totsex", hisp_id == "tothisp") %>%
select(state_abbr, statefips, pop, state) %>%
rename(name = state, state = state_abbr, fips = statefips) %>%
mutate(state = replace(state, fips == "11", "DC"))
nytcovstate %>%
group_by(state.x)
nytcovstate <- nytcovstate %>%
left_join(state_pops, by = "fips")
nytcovstate %>%
group_by(state.x)
nytcovstate %>%
group_by(state.x) %>%
summarize(nCase = sum(daily_cases, na.rm = T),
nDeath = sum(daily_deaths, na.rm = T),
popul = sum(pop, na.rm = T))
nytcovstate %>%
group_by(state.x) %>%
summarize(nCase = sum(daily_cases, na.rm = T),
nDeath = sum(daily_deaths, na.rm = T),
popul = sum(pop, na.rm = T)) %>%
summarize(state.x, case_rate = (nCase/popul) * 100000,
death_rate = (nDeath/popul) * 100000)
